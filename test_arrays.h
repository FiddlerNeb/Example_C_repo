
#ifndef TEST_ARRAYS_H
#define TEST_ARRAYS_H
#include "compression_test.h"

#define NUM_TESTS 13
array_size_t array_sizes[NUM_TESTS] = {1, 25, 24, 24, 24, 24, 24, 63, 25, 213, 14, 16, 30};
buffer_element_t test_arrays[NUM_TESTS][MAX_INPUT_SIZE] = {
    {0x01},
    {0x1A, 0x1A, 0x2B, 0x2B, 0x2B,
     0x3C, 0x3C, 0x4D, 0x4D, 0x4D,
     0x5E, 0x5E, 0x6F, 0x6F, 0x70,
     0x11, 0x22, 0x33, 0x44, 0x55,
     0x66, 0x12, 0x24, 0x36, 0x48}, // array_25_size
    {
        0x3A, 0x7F, 0x72, 0x1D, 0x24, 0x56,
        0x39, 0x08, 0x7E, 0x42, 0x79, 0x6C,
        0x71, 0x2E, 0x75, 0x73, 0x11, 0x64,
        0x5B, 0x67, 0x70, 0x7D, 0x38, 0x7B}, // all_unmatched
    {
        0x1C, 0x2D, 0x3E, 0x4F, 0x50, 0x61, 0x72, 0x73,
        0x64, 0x75, 0x36, 0x27, 0x5A, 0x5A, 0x5A, 0x5A,
        0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A}, // unmatched_matched
    {
        0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A,
        0x5A, 0x5A, 0x5A, 0x5A, 0x1C, 0x2D, 0x3E, 0x4F,
        0x50, 0x61, 0x72, 0x33, 0x24, 0x55, 0x46, 0x37}, // matched_unmatched(void)
    {
        0x1A, 0x1A, 0x2B, 0x2B, 0x3C, 0x3C, 0x4D, 0x4D,
        0x5E, 0x5E, 0x11, 0x11, 0x22, 0x22, 0x33, 0x33,
        0x44, 0x44, 0x66, 0x77, 0x78, 0x79, 0x00, 0x00}, // pairs
    {
        0x03, 0x74, 0x04, 0x04, 0x04, 0x35, 0x35, 0x64,
        0x64, 0x64, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x56, 0x45, 0x56, 0x56, 0x56, 0x09, 0x09, 0x09}, // basic
    {
        0x1A, 0x1A, 0x2B, 0x2B, 0x2B,
        0x3C, 0x3C, 0x4D, 0x4D, 0x4D,
        0x5E, 0x5E, 0x6F, 0x6F, 0x6F,
        0x11, 0x11, 0x22, 0x22, 0x22,
        0x33, 0x33, 0x44, 0x44, 0x44,
        0x55, 0x55, 0x66, 0x66, 0x66,
        0x10, 0x20, 0x30, 0x40, 0x50,
        0x60, 0x70, 0x71, 0x72, 0x73,
        0x13, 0x23, 0x34, 0x45, 0x57,
        0x14, 0x25, 0x36, 0x47, 0x58,
        0x15, 0x26, 0x37, 0x48, 0x59,
        0x16, 0x27, 0x38, 0x49, 0x5A,
        0x17, 0x28, 0x39}, // 63
    {
        0x47, 0xA, 0x73, 0x10, 0x32, 0x4E, 0x4E, 0x4E,
        0x67, 0x6F, 0x40, 0x22, 0x8, 0x2D, 0x2D, 0x2D,
        0x66, 0x21, 0x21, 0x36, 0x5F, 0x71, 0x58, 0x10,
        0x7}, // rand1
    {
        // input_data_ptr
        0x6F, 0x26, 0x50, 0x28, 0x6E, 0x6E, 0x6E, 0x1,
        0x66, 0x6, 0x3F, 0x21, 0x9, 0x9, 0x9, 0x5B,
        0x64, 0xD, 0x73, 0x73, 0x73, 0x50, 0x50, 0x50,
        0x5C, 0x3B, 0x62, 0x62, 0x59, 0x59, 0x59, 0x7C,
        0x40, 0x22, 0x7, 0xF, 0xF, 0x6E, 0x9, 0x9,
        0x58, 0x13, 0x4B, 0x4B, 0x4B, 0x45, 0x1F, 0x43,
        0x18, 0x7, 0x22, 0x22, 0x0, 0x4F, 0x6E, 0x5E,
        0x5E, 0x21, 0x21, 0x21, 0x72, 0x72, 0x32, 0x7,
        0x77, 0x5C, 0x5A, 0x5A, 0x5A, 0x60, 0x60, 0x60,
        0x4E, 0x2E, 0x2E, 0x4A, 0x4C, 0xB, 0x4, 0xB,
        0x9, 0x68, 0x68, 0x68, 0x4, 0x66, 0x18, 0x12,
        0x2, 0x69, 0x5D, 0x22, 0xA, 0x4, 0x56, 0x56,
        0x56, 0x74, 0xC, 0x2A, 0x9, 0x3C, 0x1, 0x1,
        0x3F, 0x2D, 0x2D, 0x2D, 0x3F, 0x3F, 0x3F, 0x52,
        0x52, 0x6F, 0x42, 0x61, 0x19, 0x64, 0x45, 0x42,
        0x54, 0x5F, 0x6A, 0x51, 0x49, 0x74, 0x8, 0x3C,
        0x4F, 0x4C, 0x23, 0x6F, 0x6F, 0x6F, 0x4F, 0x2C,
        0x51, 0x51, 0x51, 0x31, 0x31, 0x31, 0x7D, 0x35,
        0x25, 0x75, 0x5, 0x72, 0x1, 0x68, 0x32, 0x53,
        0x46, 0x7A, 0x7A, 0x1A, 0x50, 0x11, 0x4A, 0x47,
        0x7A, 0x62, 0x17, 0x46, 0x18, 0x50, 0x50, 0x4A,
        0x34, 0x34, 0x55, 0x55, 0x55, 0x2E, 0x4B, 0x1D,
        0x1D, 0x30, 0x76, 0x19, 0x3D, 0x3D, 0x2B, 0x7C,
        0x5D, 0x16, 0x67, 0x67, 0x78, 0x78, 0x1, 0x1,
        0x2F, 0x2F, 0x13, 0x6B, 0x54, 0xF, 0x6E, 0x2C,
        0x6E, 0x2E, 0x63, 0x63, 0x64, 0x5F, 0x2E, 0x69,
        0x1C, 0x63, 0x72, 0x66, 0x66, // 213
    },
    {
        // data_ptr
        0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x7D,
        0x35, 0x7A, 0x7A, 0x7A, 0x7A, 0x25, // 14
    },
    {
        // input_data_ptr
        0x79, 0x79, 0x79, 0x79, 0x79, 0x1E, 0x1E, 0x1E,
        0x3F, 0x3F, 0x3F, 0x70, 0x78, 0x42, 0x50, 0x29, // 16
    },
    {
        // input_data_ptr
        0x22, 0x22, 0x3C, 0x27, 0x1C, 0x58, 0x76, 0x7D,
        0x75, 0x48, 0x5C, 0x5C, 0x5C, 0x5C, 0x5C, 0x25,
        0x25, 0x25, 0x25, 0x25, 0x25, 0x1E, 0x49, 0x4F,
        0x2, 0x2, 0x68, 0x29, 0x7A, 0x35, // 30
    }

};

#endif // TEST_ARRAYS_H